package com.hky.wuyefeiguanli.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class HouseExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table HOUSE
     *
     * @mbg.generated Sun Aug 20 20:51:55 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table HOUSE
     *
     * @mbg.generated Sun Aug 20 20:51:55 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table HOUSE
     *
     * @mbg.generated Sun Aug 20 20:51:55 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table HOUSE
     *
     * @mbg.generated Sun Aug 20 20:51:55 CST 2017
     */
    public HouseExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table HOUSE
     *
     * @mbg.generated Sun Aug 20 20:51:55 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table HOUSE
     *
     * @mbg.generated Sun Aug 20 20:51:55 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table HOUSE
     *
     * @mbg.generated Sun Aug 20 20:51:55 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table HOUSE
     *
     * @mbg.generated Sun Aug 20 20:51:55 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table HOUSE
     *
     * @mbg.generated Sun Aug 20 20:51:55 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table HOUSE
     *
     * @mbg.generated Sun Aug 20 20:51:55 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table HOUSE
     *
     * @mbg.generated Sun Aug 20 20:51:55 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table HOUSE
     *
     * @mbg.generated Sun Aug 20 20:51:55 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table HOUSE
     *
     * @mbg.generated Sun Aug 20 20:51:55 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table HOUSE
     *
     * @mbg.generated Sun Aug 20 20:51:55 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table HOUSE
     *
     * @mbg.generated Sun Aug 20 20:51:55 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andHouseIdIsNull() {
            addCriterion("HOUSE_ID is null");
            return (Criteria) this;
        }

        public Criteria andHouseIdIsNotNull() {
            addCriterion("HOUSE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andHouseIdEqualTo(BigDecimal value) {
            addCriterion("HOUSE_ID =", value, "houseId");
            return (Criteria) this;
        }

        public Criteria andHouseIdNotEqualTo(BigDecimal value) {
            addCriterion("HOUSE_ID <>", value, "houseId");
            return (Criteria) this;
        }

        public Criteria andHouseIdGreaterThan(BigDecimal value) {
            addCriterion("HOUSE_ID >", value, "houseId");
            return (Criteria) this;
        }

        public Criteria andHouseIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("HOUSE_ID >=", value, "houseId");
            return (Criteria) this;
        }

        public Criteria andHouseIdLessThan(BigDecimal value) {
            addCriterion("HOUSE_ID <", value, "houseId");
            return (Criteria) this;
        }

        public Criteria andHouseIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("HOUSE_ID <=", value, "houseId");
            return (Criteria) this;
        }

        public Criteria andHouseIdIn(List<BigDecimal> values) {
            addCriterion("HOUSE_ID in", values, "houseId");
            return (Criteria) this;
        }

        public Criteria andHouseIdNotIn(List<BigDecimal> values) {
            addCriterion("HOUSE_ID not in", values, "houseId");
            return (Criteria) this;
        }

        public Criteria andHouseIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("HOUSE_ID between", value1, value2, "houseId");
            return (Criteria) this;
        }

        public Criteria andHouseIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("HOUSE_ID not between", value1, value2, "houseId");
            return (Criteria) this;
        }

        public Criteria andVillageIsNull() {
            addCriterion("VILLAGE is null");
            return (Criteria) this;
        }

        public Criteria andVillageIsNotNull() {
            addCriterion("VILLAGE is not null");
            return (Criteria) this;
        }

        public Criteria andVillageEqualTo(String value) {
            addCriterion("VILLAGE =", value, "village");
            return (Criteria) this;
        }

        public Criteria andVillageNotEqualTo(String value) {
            addCriterion("VILLAGE <>", value, "village");
            return (Criteria) this;
        }

        public Criteria andVillageGreaterThan(String value) {
            addCriterion("VILLAGE >", value, "village");
            return (Criteria) this;
        }

        public Criteria andVillageGreaterThanOrEqualTo(String value) {
            addCriterion("VILLAGE >=", value, "village");
            return (Criteria) this;
        }

        public Criteria andVillageLessThan(String value) {
            addCriterion("VILLAGE <", value, "village");
            return (Criteria) this;
        }

        public Criteria andVillageLessThanOrEqualTo(String value) {
            addCriterion("VILLAGE <=", value, "village");
            return (Criteria) this;
        }

        public Criteria andVillageLike(String value) {
            addCriterion("VILLAGE like", value, "village");
            return (Criteria) this;
        }

        public Criteria andVillageNotLike(String value) {
            addCriterion("VILLAGE not like", value, "village");
            return (Criteria) this;
        }

        public Criteria andVillageIn(List<String> values) {
            addCriterion("VILLAGE in", values, "village");
            return (Criteria) this;
        }

        public Criteria andVillageNotIn(List<String> values) {
            addCriterion("VILLAGE not in", values, "village");
            return (Criteria) this;
        }

        public Criteria andVillageBetween(String value1, String value2) {
            addCriterion("VILLAGE between", value1, value2, "village");
            return (Criteria) this;
        }

        public Criteria andVillageNotBetween(String value1, String value2) {
            addCriterion("VILLAGE not between", value1, value2, "village");
            return (Criteria) this;
        }

        public Criteria andBuildingNoIsNull() {
            addCriterion("BUILDING_NO is null");
            return (Criteria) this;
        }

        public Criteria andBuildingNoIsNotNull() {
            addCriterion("BUILDING_NO is not null");
            return (Criteria) this;
        }

        public Criteria andBuildingNoEqualTo(BigDecimal value) {
            addCriterion("BUILDING_NO =", value, "buildingNo");
            return (Criteria) this;
        }

        public Criteria andBuildingNoNotEqualTo(BigDecimal value) {
            addCriterion("BUILDING_NO <>", value, "buildingNo");
            return (Criteria) this;
        }

        public Criteria andBuildingNoGreaterThan(BigDecimal value) {
            addCriterion("BUILDING_NO >", value, "buildingNo");
            return (Criteria) this;
        }

        public Criteria andBuildingNoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("BUILDING_NO >=", value, "buildingNo");
            return (Criteria) this;
        }

        public Criteria andBuildingNoLessThan(BigDecimal value) {
            addCriterion("BUILDING_NO <", value, "buildingNo");
            return (Criteria) this;
        }

        public Criteria andBuildingNoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("BUILDING_NO <=", value, "buildingNo");
            return (Criteria) this;
        }

        public Criteria andBuildingNoIn(List<BigDecimal> values) {
            addCriterion("BUILDING_NO in", values, "buildingNo");
            return (Criteria) this;
        }

        public Criteria andBuildingNoNotIn(List<BigDecimal> values) {
            addCriterion("BUILDING_NO not in", values, "buildingNo");
            return (Criteria) this;
        }

        public Criteria andBuildingNoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BUILDING_NO between", value1, value2, "buildingNo");
            return (Criteria) this;
        }

        public Criteria andBuildingNoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BUILDING_NO not between", value1, value2, "buildingNo");
            return (Criteria) this;
        }

        public Criteria andFloorNoIsNull() {
            addCriterion("FLOOR_NO is null");
            return (Criteria) this;
        }

        public Criteria andFloorNoIsNotNull() {
            addCriterion("FLOOR_NO is not null");
            return (Criteria) this;
        }

        public Criteria andFloorNoEqualTo(BigDecimal value) {
            addCriterion("FLOOR_NO =", value, "floorNo");
            return (Criteria) this;
        }

        public Criteria andFloorNoNotEqualTo(BigDecimal value) {
            addCriterion("FLOOR_NO <>", value, "floorNo");
            return (Criteria) this;
        }

        public Criteria andFloorNoGreaterThan(BigDecimal value) {
            addCriterion("FLOOR_NO >", value, "floorNo");
            return (Criteria) this;
        }

        public Criteria andFloorNoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FLOOR_NO >=", value, "floorNo");
            return (Criteria) this;
        }

        public Criteria andFloorNoLessThan(BigDecimal value) {
            addCriterion("FLOOR_NO <", value, "floorNo");
            return (Criteria) this;
        }

        public Criteria andFloorNoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FLOOR_NO <=", value, "floorNo");
            return (Criteria) this;
        }

        public Criteria andFloorNoIn(List<BigDecimal> values) {
            addCriterion("FLOOR_NO in", values, "floorNo");
            return (Criteria) this;
        }

        public Criteria andFloorNoNotIn(List<BigDecimal> values) {
            addCriterion("FLOOR_NO not in", values, "floorNo");
            return (Criteria) this;
        }

        public Criteria andFloorNoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FLOOR_NO between", value1, value2, "floorNo");
            return (Criteria) this;
        }

        public Criteria andFloorNoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FLOOR_NO not between", value1, value2, "floorNo");
            return (Criteria) this;
        }

        public Criteria andRoomNoIsNull() {
            addCriterion("ROOM_NO is null");
            return (Criteria) this;
        }

        public Criteria andRoomNoIsNotNull() {
            addCriterion("ROOM_NO is not null");
            return (Criteria) this;
        }

        public Criteria andRoomNoEqualTo(BigDecimal value) {
            addCriterion("ROOM_NO =", value, "roomNo");
            return (Criteria) this;
        }

        public Criteria andRoomNoNotEqualTo(BigDecimal value) {
            addCriterion("ROOM_NO <>", value, "roomNo");
            return (Criteria) this;
        }

        public Criteria andRoomNoGreaterThan(BigDecimal value) {
            addCriterion("ROOM_NO >", value, "roomNo");
            return (Criteria) this;
        }

        public Criteria andRoomNoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ROOM_NO >=", value, "roomNo");
            return (Criteria) this;
        }

        public Criteria andRoomNoLessThan(BigDecimal value) {
            addCriterion("ROOM_NO <", value, "roomNo");
            return (Criteria) this;
        }

        public Criteria andRoomNoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ROOM_NO <=", value, "roomNo");
            return (Criteria) this;
        }

        public Criteria andRoomNoIn(List<BigDecimal> values) {
            addCriterion("ROOM_NO in", values, "roomNo");
            return (Criteria) this;
        }

        public Criteria andRoomNoNotIn(List<BigDecimal> values) {
            addCriterion("ROOM_NO not in", values, "roomNo");
            return (Criteria) this;
        }

        public Criteria andRoomNoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ROOM_NO between", value1, value2, "roomNo");
            return (Criteria) this;
        }

        public Criteria andRoomNoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ROOM_NO not between", value1, value2, "roomNo");
            return (Criteria) this;
        }

        public Criteria andFloorSpaceIsNull() {
            addCriterion("FLOOR_SPACE is null");
            return (Criteria) this;
        }

        public Criteria andFloorSpaceIsNotNull() {
            addCriterion("FLOOR_SPACE is not null");
            return (Criteria) this;
        }

        public Criteria andFloorSpaceEqualTo(BigDecimal value) {
            addCriterion("FLOOR_SPACE =", value, "floorSpace");
            return (Criteria) this;
        }

        public Criteria andFloorSpaceNotEqualTo(BigDecimal value) {
            addCriterion("FLOOR_SPACE <>", value, "floorSpace");
            return (Criteria) this;
        }

        public Criteria andFloorSpaceGreaterThan(BigDecimal value) {
            addCriterion("FLOOR_SPACE >", value, "floorSpace");
            return (Criteria) this;
        }

        public Criteria andFloorSpaceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FLOOR_SPACE >=", value, "floorSpace");
            return (Criteria) this;
        }

        public Criteria andFloorSpaceLessThan(BigDecimal value) {
            addCriterion("FLOOR_SPACE <", value, "floorSpace");
            return (Criteria) this;
        }

        public Criteria andFloorSpaceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FLOOR_SPACE <=", value, "floorSpace");
            return (Criteria) this;
        }

        public Criteria andFloorSpaceIn(List<BigDecimal> values) {
            addCriterion("FLOOR_SPACE in", values, "floorSpace");
            return (Criteria) this;
        }

        public Criteria andFloorSpaceNotIn(List<BigDecimal> values) {
            addCriterion("FLOOR_SPACE not in", values, "floorSpace");
            return (Criteria) this;
        }

        public Criteria andFloorSpaceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FLOOR_SPACE between", value1, value2, "floorSpace");
            return (Criteria) this;
        }

        public Criteria andFloorSpaceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FLOOR_SPACE not between", value1, value2, "floorSpace");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table HOUSE
     *
     * @mbg.generated do_not_delete_during_merge Sun Aug 20 20:51:55 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table HOUSE
     *
     * @mbg.generated Sun Aug 20 20:51:55 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}